# Config files contain secret keys so set mode=0640

- include_vars: ../../install/defaults/main.yml

- set_fact: conf_path={{ hostvars[inventory_hostname].get(name + '_conf', defaults[name + '_conf']) }}

# Sets ulimit for systemd
- name: Creates systemdconfig directory for {{ name }}
  file: 
    path: "/etc/systemd/system/{{ name }}.service.d/"
    state: directory

- name: Template for limits.conf for {{ name }}
  template:
    src:  "{{ name }}.limits.conf"
    dest: "/etc/systemd/system/{{ name }}.service.d/limits.conf"

- name: Reload systemd for {{ name }}
  raw: /bin/systemctl daemon-reload

- name: Create {{ name }} data dirs
  file: >
    path="{{ item }}"
    state=directory
    owner={{ name }}
    group=riak
    mode=0770
  notify: restart {{ name }}
  with_items: "{{ data_dirs }}"

- name: Copy {{ name }} defaults
  # works on ubuntu. may need to do other things for other platforms
  copy: >
    content="ulimit -n {{ ulimit_n }}"
    dest=/etc/default/{{ service }}
    owner=root
    group=root
    force=yes

- name: Create {{ name }} conf dir
  file: >
    path="{{ conf_path | dirname }}"
    state=directory
    owner=root
    group=root

- name: Set {{ name }} conf
  template: >
    src={{ name }}.conf.j2
    dest={{ conf_path }}
    owner=root
    group=riak
    mode=0640
  notify: restart {{ name }}

- name: Set {{ name }} extra conf
  template: >
    src={{ extra_conf }}.j2
    dest={{ conf_path | dirname }}/{{ extra_conf }}
    owner=root
    group=riak
    mode=0640
  notify: restart {{ name }}
  when: extra_conf != ""

- name: Drop {{ name }} {{ drop_conf }}
  file: >
    path={{ conf_path | dirname }}/{{ drop_conf }}
    state=absent
  notify: restart {{ name }}
  when: drop_conf != ""

- name: Start {{ name }}
  service: name={{ service }} state=started enabled=yes
  when: not riakcs_deb_check.get("skipped")
